<jqa:jqassistant-rules xmlns:jqa="http://www.buschmais.com/jqassistant/core/analysis/rules/schema/v1.0">
    <group id="default">
        <includeConcept refId="duration:Method"/>
        <includeConcept refId="calls:Method"/>
        <includeConcept refId="calls:Type"/>
        <includeConcept refId="dependencies:Type"/>
    </group>
    <concept id="duration:Method">
        <description>Calculates the duration of each method based on execution events.
        </description>
        <cypher><![CDATA[
             MATCH
                (e:Execution)-[:EXECUTES]->(m:Method)
             WITH
                m, SUM(e.afterTimestamp - e.beforeTimestamp) AS duration
             SET
                m.duration = duration
             RETURN
               m, duration
        ]]></cypher>
    </concept>
    <concept id="calls:Method">
        <description>Creates the weighted call graph, i.e., the CALLS relationships between methods based on call
            events.
        </description>
        <cypher><![CDATA[
             MATCH
                (c:Call)-[:CALLED_BY]->(caller:Method)
             MATCH
                (c:Call)-[:CALLS]->(callee:Method)
             MERGE
               (caller)-[calls:CALLS]->(callee)
             WITH
                caller, callee, calls, count(calls) as numberOfCalls
             SET
                calls.weight = numberOfCalls
             RETURN
                caller, callee, calls
        ]]></cypher>
    </concept>
    <concept id="calls:Type">
        <requiresConcept refId="calls:Method"/>
        <description>Creates the weighted call graph on type level, i.e., the CALLS relationships between types based on
            method calls.
        </description>
        <cypher><![CDATA[
            MATCH
                (caller:Type)-[:DECLARES]->(:Method)-[methodCalls:CALLS]->(:Method)<-[:DECLARES]-(callee:Type)
            WHERE
                caller<>callee
            WITH
                caller, callee, sum(methodCalls.weight) as aggregatedNumberOfCalls
            MERGE
                (caller)-[typeCalls:CALLS]->(callee)
            SET
                typeCalls.weight = aggregatedNumberOfCalls
            RETURN
                caller, callee, typeCalls
        ]]></cypher>
    </concept>
    <concept id="dependencies:Type">
        <requiresConcept refId="calls:Method"/>
        <description>Creates the dependency graph, i.e., the DEPENDS_ON relationship between types if there are method
            calls between them.
        </description>
        <cypher><![CDATA[
               MATCH
                 (dependent:Type)-[:DECLARES]->(:Method)-[:CALLS]->(:Method)<-[:DECLARES]-(dependency:Type)
               WHERE
                 dependent<>dependency
               MERGE
                 (dependent)-[depends:DEPENDS_ON]->(dependency)
               RETURN
                 dependent, dependency, depends
        ]]></cypher>
    </concept>

</jqa:jqassistant-rules>
